// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopProject.EFDB.Models;

#nullable disable

namespace ShopProject.EFDB.Migrations
{
    [DbContext(typeof(ShopProjectDbContext))]
    [Migration("20240401185235_NewInitialize")]
    partial class NewInitialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CashierShop", b =>
                {
                    b.Property<int>("CashiersCashierId")
                        .HasColumnType("integer");

                    b.Property<int>("ShopsShopId")
                        .HasColumnType("integer");

                    b.HasKey("CashiersCashierId", "ShopsShopId");

                    b.HasIndex("ShopsShopId");

                    b.ToTable("CashierShop");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Cashier", b =>
                {
                    b.Property<int>("CashierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CashierId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CashierId")
                        .HasName("Cashiers_pkey");

                    b.ToTable("Cashiers");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("numeric");

                    b.HasKey("ProductId")
                        .HasName("Products_pkey");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.ProductPlan", b =>
                {
                    b.Property<int>("ProductPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductPlanId"));

                    b.Property<int>("ExpectedQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ProductPlanId")
                        .HasName("ProductPlans_pkey");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShopId");

                    b.ToTable("ProductPlans");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PurchaseId"));

                    b.Property<int>("CashierId")
                        .HasColumnType("integer");

                    b.HasKey("PurchaseId")
                        .HasName("Purchases_pkey");

                    b.HasIndex("CashierId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.PurchaseProduct", b =>
                {
                    b.Property<int>("PurchaseProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PurchaseProductId"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("integer");

                    b.HasKey("PurchaseProductId")
                        .HasName("PurchaseProducts_pkey");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchaseProducts");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSalesManager")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShopManager")
                        .HasColumnType("boolean");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoleId")
                        .HasName("Roles_pkey");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShopId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ShopId")
                        .HasName("Shops_pkey");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.ShopPlan", b =>
                {
                    b.Property<int>("ShopPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShopPlanId"));

                    b.Property<decimal>("AverageBill")
                        .HasColumnType("numeric");

                    b.Property<int>("MoneyTurnover")
                        .HasColumnType("integer");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer");

                    b.Property<int>("TradeTurnover")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ShopPlanId")
                        .HasName("ShopPlans_pkey");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopPlans");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.TokenLogin", b =>
                {
                    b.Property<int>("TokenLoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TokenLoginId"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TokenLoginId")
                        .HasName("TokenLogins_pkey");

                    b.ToTable("TokenLogins");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId")
                        .HasName("Users_pkey");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.WorkerPlan", b =>
                {
                    b.Property<int>("WorkerPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkerPlanId"));

                    b.Property<decimal>("AverageBill")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductsCount")
                        .HasColumnType("integer");

                    b.Property<int>("PurchasesCount")
                        .HasColumnType("integer");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("WorkerPlanId")
                        .HasName("WorkerPlans_pkey");

                    b.HasIndex("ShopId");

                    b.ToTable("WorkerPlans");
                });

            modelBuilder.Entity("ShopUser", b =>
                {
                    b.Property<int>("ShopsShopId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("integer");

                    b.HasKey("ShopsShopId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("ShopUser");
                });

            modelBuilder.Entity("CashierShop", b =>
                {
                    b.HasOne("ShopProject.EFDB.Models.Cashier", null)
                        .WithMany()
                        .HasForeignKey("CashiersCashierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopProject.EFDB.Models.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.ProductPlan", b =>
                {
                    b.HasOne("ShopProject.EFDB.Models.Product", "Product")
                        .WithMany("ProductPlans")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopProject.EFDB.Models.Shop", "Shop")
                        .WithMany("ProductPlans")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Purchase", b =>
                {
                    b.HasOne("ShopProject.EFDB.Models.Cashier", "Cashier")
                        .WithMany("Purchases")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cashier");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.PurchaseProduct", b =>
                {
                    b.HasOne("ShopProject.EFDB.Models.Product", "Product")
                        .WithMany("PurchaseProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopProject.EFDB.Models.Purchase", "Purchase")
                        .WithMany("PurchaseProducts")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.ShopPlan", b =>
                {
                    b.HasOne("ShopProject.EFDB.Models.Shop", "Shop")
                        .WithMany("ShopPlans")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.User", b =>
                {
                    b.HasOne("ShopProject.EFDB.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.WorkerPlan", b =>
                {
                    b.HasOne("ShopProject.EFDB.Models.Shop", "Shop")
                        .WithMany("WorkerPlans")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("ShopUser", b =>
                {
                    b.HasOne("ShopProject.EFDB.Models.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopProject.EFDB.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Cashier", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Product", b =>
                {
                    b.Navigation("ProductPlans");

                    b.Navigation("PurchaseProducts");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Purchase", b =>
                {
                    b.Navigation("PurchaseProducts");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ShopProject.EFDB.Models.Shop", b =>
                {
                    b.Navigation("ProductPlans");

                    b.Navigation("ShopPlans");

                    b.Navigation("WorkerPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
